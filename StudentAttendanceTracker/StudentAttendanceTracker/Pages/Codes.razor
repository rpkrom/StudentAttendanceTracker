@page "/codes"

@using System.Collections.Generic
@using System.Data.SqlClient
@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.Configuration

@*The below code is for generating codes for specific courses. An instructor will use this page to generate a code, then give that code to a student. 
Developer: Robert Price*@


<h3>Course Code Generator</h3>

<div class="form-group">
    <label for="courseDropdown">Select a Course:</label>
    <select id="courseDropdown" style="width: 300px;" class="form-control" @bind="selectedCourseId">
        @foreach (var course in courses)
        {
            <option value="@course.Id">@course.Course_Name</option>
        }
    </select>
    <span class="error" style="color: red;">@selectedCourseError</span>
</div>

<button class="btn btn-primary" @onclick="GenerateCode">Generate Code</button>

@if (!string.IsNullOrEmpty(generatedCode))
{
    <div class="mt-4">
        <h5>Generated Code:</h5>
        <p>@generatedCode</p>
    </div>
}

<table class="table table-striped mt-4">
    <thead>
        <tr>
            <th>Course</th>
            <th>Code</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entry in codeEntries)
        {
            <tr>
                <td>@entry.Course_Name</td>
                <td>@entry.Code</td>
            </tr>
        }
    </tbody>
</table>


@code {
    [Inject]
    private DbContextOptions<ApplicationDbContext> DbContextOptions { get; set; }
    private List<Course> courses = new List<Course>();
    private int selectedCourseId;
    private string selectedCourseError = "";


    // Load Courses when the component initializes
    protected override void OnInitialized()
    {
        LoadCourses();
        LoadAccessCodes();
    }

    // Load Students from the database
    private void LoadCourses()
    {
        using (var dbContext = new ApplicationDbContext(DbContextOptions))
        {
            courses = dbContext.Courses.ToList();
        }
    }
    private void LoadAccessCodes()
    {
        using (var dbContext = new ApplicationDbContext(DbContextOptions))
        {
            // Retrieve access codes from the database and associate them with their corresponding courses
            codeEntries = dbContext.AccessCodes.ToList();
        }
    }



    private string selectedCourse;
    private string generatedCode;
    private List<AccessCode> codeEntries = new List<AccessCode>();

    private void GenerateCode()
    {
        if (selectedCourseId == 0)
        {
            selectedCourseError = "You must select a course.";
            return;
        }

        // Clear any previous error
        selectedCourseError = "";
        if (selectedCourseId != 0)
        {
            using (var dbContext = new ApplicationDbContext(DbContextOptions))
            {
                // Generate a 10-digit code (you can adjust this logic as needed)
                var random = new Random();
                var code = random.Next(10000, 99999).ToString();

                var course = dbContext.Courses.FirstOrDefault(c => c.Id == selectedCourseId);

                if (course != null)
                {
                    // Store the code entry
                    var entry = new AccessCode { Course_id = course.Id, Code = code, Expiration = DateTime.Now.AddMinutes(5), Course_Name = course.Course_Name };
                    codeEntries.Add(entry);

                    dbContext.AccessCodes.Add(entry);
                    dbContext.SaveChanges();
                }

                // Clear the selected course and generated code
                // selectedCourse = string.Empty;
                generatedCode = code;
            }
        }
    }
}

